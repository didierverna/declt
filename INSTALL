
2 Installation
**************

First of all, see Declt's homepage
(http://www.lrde.epita.fr/~didier/software/lisp/typesetting.php#declt)
for tarballs, Git repository and online documentation.  Declt is an ASDF
3 library, and currently works with SBCL only.  If you download a Declt
tarball, or clone the repository, you need to unpack somewhere in the
ASDF source registry.  Otherwise, Declt is also available via Quicklisp.
*Note Supported Platforms::, for more information on portability and
dependencies.

   In addition to the bare Lisp library, the Declt distribution offers
documentation in the form of 2 different manuals: the User Manual (you
are reading it) and the Declt *note Reference Manual:
(declt-reference)Top.  The latter is generated by Declt itself.  If you
want to compile the manuals by yourself, please follow the instructions
below.
  1. Edit ‘make/config.make’ to your specific needs.  In particular, you
     will see a number of external programs that are required in order
     to compile the manuals in there (*note Supported Platforms::).
  2. Type ‘make’.  By default, the documentation is built in Info, PDF,
     and HTML formats.  If you want other formats (DVI and Postscript
     are available), type ‘make all-formats’.  You can also type
     individually ‘make dvi’ and/or ‘make ps’ in order to get the
     corresponding format.
  3. Type ‘make install’ to install the documentation.  If you have
     compiled the documentation in DVI and Postscript format, those will
     be installed as well.

   The reference manual's Texinfo source is included in the distribution
(and in the repository), although, as mentioned before, it is generated
by Declt itself.  Before compiling, it is possible to regenerate a local
version of it with hyperlinks to your installation by typing ‘make
localref’.  If you ever need to regenerate the regular version, you can
also type ‘make generate’.

   Type ‘make uninstall’ to uninstall the library.


7.1 Configuration
=================

Some aspects of Declt's behavior can be configured _before_ the library
system is actually loaded.  Declt stores its user-level configuration
(along with some other setup parameters) in another ASDF system called
‘net.didierverna.declt.setup’ (and the eponym package).  In order to
configure the library (I repeat, prior to loading it), you will
typically do something like this:
(require "asdf")
(asdf:load-system :net.didierverna.declt.setup)
(net.didierverna.declt.setup:configure <option> <value>)

 -- Function: configure KEY VALUE
     Set KEY to VALUE in the current Declt configuration.

   Out of curiosity, you can also inquire the current configuration for
specific options with the following function.
 -- Function: configuration KEY
     Return KEY's value in the current Declt configuration.

   Currently, the following options are provided.
:swank-eval-in-emacs
     This option is only useful if you use Slime, and mostly if you plan
     on hacking Declt itself.  The library provides indentation
     information for some of its functions directly embedded in the
     code.  This information can be automatically transmitted to Emacs
     when the ASDF system is loaded if you set this option to ‘t’.
     However, note that for this to work, the Slime variable
     ‘slime-enable-evaluate-in-emacs’ must also be set to ‘t’ in your
     Emacs session.  If you're interested to know how this process
     works, I have described it in this blog entry
     (http://www.didierverna.net/blog/index.php?post/2011/07/20/One-more-indentation-hack).


Appendix B Supported Platforms
******************************

Declt requires ASDF 3 and SBCL 2.3.1 or later.  Other Lisp
implementations are not currently supported, but may be in the future.
Besides, SBCL needs to be compiled with support for
:sb-xref-for-internals.  This can be achieved by passing the
‘--with-sb-xref-for-internals’ option (or ‘--fancy’, which includes it)
to the ‘make.sh’ build script.

   The Texinfo code that Declt generates requires Makeinfo 6.7, and
contains extended Unicode characters (so even for reading Info, Unicode
support is necessary).

   In order to compile and install the user manuals on your own, you
will need ‘makeinfo’ / ‘install-info’, ‘convert’ (from Image Magick),
‘dot’, and ‘graph-easy’ (from the Graph::Easy Perl library).

